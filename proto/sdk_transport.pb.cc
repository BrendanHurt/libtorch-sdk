// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdk_transport.proto

#include "sdk_transport.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace params {
constexpr Parameters::Parameters(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parameters_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tensor_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ParametersDefaultTypeInternal {
  constexpr ParametersDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ParametersDefaultTypeInternal() {}
  union {
    Parameters _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ParametersDefaultTypeInternal _Parameters_default_instance_;
constexpr ServerMessage_Reconnect::ServerMessage_Reconnect(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : seconds_(PROTOBUF_LONGLONG(0)){}
struct ServerMessage_ReconnectDefaultTypeInternal {
  constexpr ServerMessage_ReconnectDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ServerMessage_ReconnectDefaultTypeInternal() {}
  union {
    ServerMessage_Reconnect _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ServerMessage_ReconnectDefaultTypeInternal _ServerMessage_Reconnect_default_instance_;
constexpr ServerMessage_GetParameters::ServerMessage_GetParameters(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ServerMessage_GetParametersDefaultTypeInternal {
  constexpr ServerMessage_GetParametersDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ServerMessage_GetParametersDefaultTypeInternal() {}
  union {
    ServerMessage_GetParameters _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ServerMessage_GetParametersDefaultTypeInternal _ServerMessage_GetParameters_default_instance_;
constexpr ServerMessage_FitIns_ConfigEntry_DoNotUse::ServerMessage_FitIns_ConfigEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ServerMessage_FitIns_ConfigEntry_DoNotUseDefaultTypeInternal {
  constexpr ServerMessage_FitIns_ConfigEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ServerMessage_FitIns_ConfigEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ServerMessage_FitIns_ConfigEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ServerMessage_FitIns_ConfigEntry_DoNotUseDefaultTypeInternal _ServerMessage_FitIns_ConfigEntry_DoNotUse_default_instance_;
constexpr ServerMessage_FitIns::ServerMessage_FitIns(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : config_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , parameters_(nullptr){}
struct ServerMessage_FitInsDefaultTypeInternal {
  constexpr ServerMessage_FitInsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ServerMessage_FitInsDefaultTypeInternal() {}
  union {
    ServerMessage_FitIns _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ServerMessage_FitInsDefaultTypeInternal _ServerMessage_FitIns_default_instance_;
constexpr ServerMessage_EvaluateIns_ConfigEntry_DoNotUse::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ServerMessage_EvaluateIns_ConfigEntry_DoNotUseDefaultTypeInternal {
  constexpr ServerMessage_EvaluateIns_ConfigEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ServerMessage_EvaluateIns_ConfigEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ServerMessage_EvaluateIns_ConfigEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ServerMessage_EvaluateIns_ConfigEntry_DoNotUseDefaultTypeInternal _ServerMessage_EvaluateIns_ConfigEntry_DoNotUse_default_instance_;
constexpr ServerMessage_EvaluateIns::ServerMessage_EvaluateIns(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : config_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , parameters_(nullptr){}
struct ServerMessage_EvaluateInsDefaultTypeInternal {
  constexpr ServerMessage_EvaluateInsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ServerMessage_EvaluateInsDefaultTypeInternal() {}
  union {
    ServerMessage_EvaluateIns _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ServerMessage_EvaluateInsDefaultTypeInternal _ServerMessage_EvaluateIns_default_instance_;
constexpr ServerMessage_PropertiesIns_ConfigEntry_DoNotUse::ServerMessage_PropertiesIns_ConfigEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ServerMessage_PropertiesIns_ConfigEntry_DoNotUseDefaultTypeInternal {
  constexpr ServerMessage_PropertiesIns_ConfigEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ServerMessage_PropertiesIns_ConfigEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ServerMessage_PropertiesIns_ConfigEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ServerMessage_PropertiesIns_ConfigEntry_DoNotUseDefaultTypeInternal _ServerMessage_PropertiesIns_ConfigEntry_DoNotUse_default_instance_;
constexpr ServerMessage_PropertiesIns::ServerMessage_PropertiesIns(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : config_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct ServerMessage_PropertiesInsDefaultTypeInternal {
  constexpr ServerMessage_PropertiesInsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ServerMessage_PropertiesInsDefaultTypeInternal() {}
  union {
    ServerMessage_PropertiesIns _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ServerMessage_PropertiesInsDefaultTypeInternal _ServerMessage_PropertiesIns_default_instance_;
constexpr ServerMessage::ServerMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct ServerMessageDefaultTypeInternal {
  constexpr ServerMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ServerMessageDefaultTypeInternal() {}
  union {
    ServerMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ServerMessageDefaultTypeInternal _ServerMessage_default_instance_;
constexpr ClientMessage_Disconnect::ClientMessage_Disconnect(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : reason_(0)
{}
struct ClientMessage_DisconnectDefaultTypeInternal {
  constexpr ClientMessage_DisconnectDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClientMessage_DisconnectDefaultTypeInternal() {}
  union {
    ClientMessage_Disconnect _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClientMessage_DisconnectDefaultTypeInternal _ClientMessage_Disconnect_default_instance_;
constexpr ClientMessage_ParametersRes::ClientMessage_ParametersRes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parameters_(nullptr){}
struct ClientMessage_ParametersResDefaultTypeInternal {
  constexpr ClientMessage_ParametersResDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClientMessage_ParametersResDefaultTypeInternal() {}
  union {
    ClientMessage_ParametersRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClientMessage_ParametersResDefaultTypeInternal _ClientMessage_ParametersRes_default_instance_;
constexpr ClientMessage_FitRes_MetricsEntry_DoNotUse::ClientMessage_FitRes_MetricsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ClientMessage_FitRes_MetricsEntry_DoNotUseDefaultTypeInternal {
  constexpr ClientMessage_FitRes_MetricsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClientMessage_FitRes_MetricsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ClientMessage_FitRes_MetricsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClientMessage_FitRes_MetricsEntry_DoNotUseDefaultTypeInternal _ClientMessage_FitRes_MetricsEntry_DoNotUse_default_instance_;
constexpr ClientMessage_FitRes::ClientMessage_FitRes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metrics_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , parameters_(nullptr)
  , num_examples_(PROTOBUF_LONGLONG(0)){}
struct ClientMessage_FitResDefaultTypeInternal {
  constexpr ClientMessage_FitResDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClientMessage_FitResDefaultTypeInternal() {}
  union {
    ClientMessage_FitRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClientMessage_FitResDefaultTypeInternal _ClientMessage_FitRes_default_instance_;
constexpr ClientMessage_EvaluateRes_MetricsEntry_DoNotUse::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ClientMessage_EvaluateRes_MetricsEntry_DoNotUseDefaultTypeInternal {
  constexpr ClientMessage_EvaluateRes_MetricsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClientMessage_EvaluateRes_MetricsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ClientMessage_EvaluateRes_MetricsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClientMessage_EvaluateRes_MetricsEntry_DoNotUseDefaultTypeInternal _ClientMessage_EvaluateRes_MetricsEntry_DoNotUse_default_instance_;
constexpr ClientMessage_EvaluateRes::ClientMessage_EvaluateRes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metrics_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , num_examples_(PROTOBUF_LONGLONG(0))
  , loss_(0){}
struct ClientMessage_EvaluateResDefaultTypeInternal {
  constexpr ClientMessage_EvaluateResDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClientMessage_EvaluateResDefaultTypeInternal() {}
  union {
    ClientMessage_EvaluateRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClientMessage_EvaluateResDefaultTypeInternal _ClientMessage_EvaluateRes_default_instance_;
constexpr ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse::ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ClientMessage_PropertiesRes_PropertiesEntry_DoNotUseDefaultTypeInternal {
  constexpr ClientMessage_PropertiesRes_PropertiesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClientMessage_PropertiesRes_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClientMessage_PropertiesRes_PropertiesEntry_DoNotUseDefaultTypeInternal _ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse_default_instance_;
constexpr ClientMessage_PropertiesRes::ClientMessage_PropertiesRes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : properties_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct ClientMessage_PropertiesResDefaultTypeInternal {
  constexpr ClientMessage_PropertiesResDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClientMessage_PropertiesResDefaultTypeInternal() {}
  union {
    ClientMessage_PropertiesRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClientMessage_PropertiesResDefaultTypeInternal _ClientMessage_PropertiesRes_default_instance_;
constexpr ClientMessage::ClientMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct ClientMessageDefaultTypeInternal {
  constexpr ClientMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClientMessageDefaultTypeInternal() {}
  union {
    ClientMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClientMessageDefaultTypeInternal _ClientMessage_default_instance_;
constexpr Scalar::Scalar(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct ScalarDefaultTypeInternal {
  constexpr ScalarDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ScalarDefaultTypeInternal() {}
  union {
    Scalar _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ScalarDefaultTypeInternal _Scalar_default_instance_;
}  // namespace params
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_sdk_5ftransport_2eproto[20];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_sdk_5ftransport_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_sdk_5ftransport_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_sdk_5ftransport_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::params::Parameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::Parameters, parameters_),
  PROTOBUF_FIELD_OFFSET(::params::Parameters, tensor_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_Reconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_Reconnect, seconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_GetParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_FitIns_ConfigEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_FitIns_ConfigEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_FitIns_ConfigEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_FitIns_ConfigEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_FitIns, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_FitIns, parameters_),
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_FitIns, config_),
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_EvaluateIns, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_EvaluateIns, parameters_),
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_EvaluateIns, config_),
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_PropertiesIns_ConfigEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_PropertiesIns_ConfigEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_PropertiesIns_ConfigEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_PropertiesIns_ConfigEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_PropertiesIns, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage_PropertiesIns, config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::params::ServerMessage, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_Disconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_Disconnect, reason_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_ParametersRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_ParametersRes, parameters_),
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_FitRes_MetricsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_FitRes_MetricsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_FitRes_MetricsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_FitRes_MetricsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_FitRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_FitRes, parameters_),
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_FitRes, num_examples_),
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_FitRes, metrics_),
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_EvaluateRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_EvaluateRes, num_examples_),
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_EvaluateRes, loss_),
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_EvaluateRes, metrics_),
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_PropertiesRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage_PropertiesRes, properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::params::ClientMessage, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::params::Scalar, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::params::Scalar, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::params::Scalar, scalar_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::params::Parameters)},
  { 7, -1, sizeof(::params::ServerMessage_Reconnect)},
  { 13, -1, sizeof(::params::ServerMessage_GetParameters)},
  { 18, 25, sizeof(::params::ServerMessage_FitIns_ConfigEntry_DoNotUse)},
  { 27, -1, sizeof(::params::ServerMessage_FitIns)},
  { 34, 41, sizeof(::params::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse)},
  { 43, -1, sizeof(::params::ServerMessage_EvaluateIns)},
  { 50, 57, sizeof(::params::ServerMessage_PropertiesIns_ConfigEntry_DoNotUse)},
  { 59, -1, sizeof(::params::ServerMessage_PropertiesIns)},
  { 65, -1, sizeof(::params::ServerMessage)},
  { 76, -1, sizeof(::params::ClientMessage_Disconnect)},
  { 82, -1, sizeof(::params::ClientMessage_ParametersRes)},
  { 88, 95, sizeof(::params::ClientMessage_FitRes_MetricsEntry_DoNotUse)},
  { 97, -1, sizeof(::params::ClientMessage_FitRes)},
  { 105, 112, sizeof(::params::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse)},
  { 114, -1, sizeof(::params::ClientMessage_EvaluateRes)},
  { 122, 129, sizeof(::params::ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse)},
  { 131, -1, sizeof(::params::ClientMessage_PropertiesRes)},
  { 137, -1, sizeof(::params::ClientMessage)},
  { 148, -1, sizeof(::params::Scalar)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_Parameters_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ServerMessage_Reconnect_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ServerMessage_GetParameters_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ServerMessage_FitIns_ConfigEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ServerMessage_FitIns_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ServerMessage_EvaluateIns_ConfigEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ServerMessage_EvaluateIns_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ServerMessage_PropertiesIns_ConfigEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ServerMessage_PropertiesIns_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ServerMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ClientMessage_Disconnect_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ClientMessage_ParametersRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ClientMessage_FitRes_MetricsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ClientMessage_FitRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ClientMessage_EvaluateRes_MetricsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ClientMessage_EvaluateRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ClientMessage_PropertiesRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_ClientMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::params::_Scalar_default_instance_),
};

const char descriptor_table_protodef_sdk_5ftransport_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023sdk_transport.proto\022\006params\"5\n\nParamet"
  "ers\022\022\n\nparameters\030\001 \001(\014\022\023\n\013tensor_type\030\002"
  " \001(\t\"\331\006\n\rServerMessage\0224\n\treconnect\030\001 \001("
  "\0132\037.params.ServerMessage.ReconnectH\000\022=\n\016"
  "get_parameters\030\002 \001(\0132#.params.ServerMess"
  "age.GetParametersH\000\022/\n\007fit_ins\030\003 \001(\0132\034.p"
  "arams.ServerMessage.FitInsH\000\0229\n\014evaluate"
  "_ins\030\004 \001(\0132!.params.ServerMessage.Evalua"
  "teInsH\000\022=\n\016properties_ons\030\005 \001(\0132#.params"
  ".ServerMessage.PropertiesInsH\000\032\034\n\tReconn"
  "ect\022\017\n\007seconds\030\001 \001(\003\032\017\n\rGetParameters\032\251\001"
  "\n\006FitIns\022&\n\nparameters\030\001 \001(\0132\022.params.Pa"
  "rameters\0228\n\006config\030\002 \003(\0132(.params.Server"
  "Message.FitIns.ConfigEntry\032=\n\013ConfigEntr"
  "y\022\013\n\003key\030\001 \001(\t\022\035\n\005value\030\002 \001(\0132\016.params.S"
  "calar:\0028\001\032\263\001\n\013EvaluateIns\022&\n\nparameters\030"
  "\001 \001(\0132\022.params.Parameters\022=\n\006config\030\002 \003("
  "\0132-.params.ServerMessage.EvaluateIns.Con"
  "figEntry\032=\n\013ConfigEntry\022\013\n\003key\030\001 \001(\t\022\035\n\005"
  "value\030\002 \001(\0132\016.params.Scalar:\0028\001\032\217\001\n\rProp"
  "ertiesIns\022\?\n\006config\030\001 \003(\0132/.params.Serve"
  "rMessage.PropertiesIns.ConfigEntry\032=\n\013Co"
  "nfigEntry\022\013\n\003key\030\001 \001(\t\022\035\n\005value\030\002 \001(\0132\016."
  "params.Scalar:\0028\001B\005\n\003msg\"\267\007\n\rClientMessa"
  "ge\0226\n\ndisconnect\030\001 \001(\0132 .params.ClientMe"
  "ssage.DisconnectH\000\022=\n\016parameters_res\030\002 \001"
  "(\0132#.params.ClientMessage.ParametersResH"
  "\000\022/\n\007fit_res\030\003 \001(\0132\034.params.ClientMessag"
  "e.FitResH\000\0229\n\014evaluate_res\030\004 \001(\0132!.param"
  "s.ClientMessage.EvaluateResH\000\022=\n\016propert"
  "ies_res\030\005 \001(\0132#.params.ClientMessage.Pro"
  "pertiesResH\000\032,\n\nDisconnect\022\036\n\006reason\030\001 \001"
  "(\0162\016.params.Reason\0327\n\rParametersRes\022&\n\np"
  "arameters\030\001 \001(\0132\022.params.Parameters\032\302\001\n\006"
  "FitRes\022&\n\nparameters\030\001 \001(\0132\022.params.Para"
  "meters\022\024\n\014num_examples\030\002 \001(\003\022:\n\007metrics\030"
  "\005 \003(\0132).params.ClientMessage.FitRes.Metr"
  "icsEntry\032>\n\014MetricsEntry\022\013\n\003key\030\001 \001(\t\022\035\n"
  "\005value\030\002 \001(\0132\016.params.Scalar:\0028\001\032\262\001\n\013Eva"
  "luateRes\022\024\n\014num_examples\030\001 \001(\003\022\014\n\004loss\030\002"
  " \001(\002\022\?\n\007metrics\030\004 \003(\0132..params.ClientMes"
  "sage.EvaluateRes.MetricsEntry\032>\n\014Metrics"
  "Entry\022\013\n\003key\030\001 \001(\t\022\035\n\005value\030\002 \001(\0132\016.para"
  "ms.Scalar:\0028\001\032\233\001\n\rPropertiesRes\022G\n\nprope"
  "rties\030\001 \003(\01323.params.ClientMessage.Prope"
  "rtiesRes.PropertiesEntry\032A\n\017PropertiesEn"
  "try\022\013\n\003key\030\001 \001(\t\022\035\n\005value\030\002 \001(\0132\016.params"
  ".Scalar:\0028\001B\005\n\003msg\"i\n\006Scalar\022\020\n\006double\030\001"
  " \001(\001H\000\022\020\n\006sint64\030\002 \001(\022H\000\022\016\n\004bool\030\003 \001(\010H\000"
  "\022\020\n\006string\030\004 \001(\tH\000\022\017\n\005bytes\030\005 \001(\014H\000B\010\n\006s"
  "calar*Z\n\006Reason\022\n\n\006UNKOWN\020\000\022\r\n\tRECONNECT"
  "\020\001\022\026\n\022POWER_DISCONNECTED\020\002\022\024\n\020WIFI_UNAVA"
  "ILABLE\020\003\022\007\n\003ACK\020\0042N\n\020FlowerServiceSDK\022:\n"
  "\004Join\022\025.params.ClientMessage\032\025.params.Se"
  "rverMessage\"\000(\0010\001b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_sdk_5ftransport_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_sdk_5ftransport_2eproto = {
  false, false, 2185, descriptor_table_protodef_sdk_5ftransport_2eproto, "sdk_transport.proto", 
  &descriptor_table_sdk_5ftransport_2eproto_once, nullptr, 0, 20,
  schemas, file_default_instances, TableStruct_sdk_5ftransport_2eproto::offsets,
  file_level_metadata_sdk_5ftransport_2eproto, file_level_enum_descriptors_sdk_5ftransport_2eproto, file_level_service_descriptors_sdk_5ftransport_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_sdk_5ftransport_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_sdk_5ftransport_2eproto);
  return descriptor_table_sdk_5ftransport_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_sdk_5ftransport_2eproto(&descriptor_table_sdk_5ftransport_2eproto);
namespace params {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Reason_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_sdk_5ftransport_2eproto);
  return file_level_enum_descriptors_sdk_5ftransport_2eproto[0];
}
bool Reason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Parameters::_Internal {
 public:
};

Parameters::Parameters(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:params.Parameters)
}
Parameters::Parameters(const Parameters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parameters().empty()) {
    parameters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parameters(), 
      GetArena());
  }
  tensor_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tensor_type().empty()) {
    tensor_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tensor_type(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:params.Parameters)
}

void Parameters::SharedCtor() {
parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
tensor_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Parameters::~Parameters() {
  // @@protoc_insertion_point(destructor:params.Parameters)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Parameters::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  parameters_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tensor_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Parameters::ArenaDtor(void* object) {
  Parameters* _this = reinterpret_cast< Parameters* >(object);
  (void)_this;
}
void Parameters::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Parameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Parameters::Clear() {
// @@protoc_insertion_point(message_clear_start:params.Parameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.ClearToEmpty();
  tensor_type_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Parameters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes parameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_parameters();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string tensor_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_tensor_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "params.Parameters.tensor_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Parameters::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:params.Parameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes parameters = 1;
  if (this->parameters().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_parameters(), target);
  }

  // string tensor_type = 2;
  if (this->tensor_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tensor_type().data(), static_cast<int>(this->_internal_tensor_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "params.Parameters.tensor_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tensor_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:params.Parameters)
  return target;
}

size_t Parameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:params.Parameters)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes parameters = 1;
  if (this->parameters().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_parameters());
  }

  // string tensor_type = 2;
  if (this->tensor_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tensor_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Parameters::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:params.Parameters)
  GOOGLE_DCHECK_NE(&from, this);
  const Parameters* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Parameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:params.Parameters)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:params.Parameters)
    MergeFrom(*source);
  }
}

void Parameters::MergeFrom(const Parameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:params.Parameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parameters().size() > 0) {
    _internal_set_parameters(from._internal_parameters());
  }
  if (from.tensor_type().size() > 0) {
    _internal_set_tensor_type(from._internal_tensor_type());
  }
}

void Parameters::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:params.Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parameters::CopyFrom(const Parameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:params.Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parameters::IsInitialized() const {
  return true;
}

void Parameters::InternalSwap(Parameters* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  parameters_.Swap(&other->parameters_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tensor_type_.Swap(&other->tensor_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Parameters::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ServerMessage_Reconnect::_Internal {
 public:
};

ServerMessage_Reconnect::ServerMessage_Reconnect(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:params.ServerMessage.Reconnect)
}
ServerMessage_Reconnect::ServerMessage_Reconnect(const ServerMessage_Reconnect& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  seconds_ = from.seconds_;
  // @@protoc_insertion_point(copy_constructor:params.ServerMessage.Reconnect)
}

void ServerMessage_Reconnect::SharedCtor() {
seconds_ = PROTOBUF_LONGLONG(0);
}

ServerMessage_Reconnect::~ServerMessage_Reconnect() {
  // @@protoc_insertion_point(destructor:params.ServerMessage.Reconnect)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerMessage_Reconnect::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ServerMessage_Reconnect::ArenaDtor(void* object) {
  ServerMessage_Reconnect* _this = reinterpret_cast< ServerMessage_Reconnect* >(object);
  (void)_this;
}
void ServerMessage_Reconnect::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerMessage_Reconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ServerMessage_Reconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:params.ServerMessage.Reconnect)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seconds_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerMessage_Reconnect::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 seconds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          seconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerMessage_Reconnect::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:params.ServerMessage.Reconnect)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seconds = 1;
  if (this->seconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:params.ServerMessage.Reconnect)
  return target;
}

size_t ServerMessage_Reconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:params.ServerMessage.Reconnect)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 seconds = 1;
  if (this->seconds() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_seconds());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerMessage_Reconnect::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:params.ServerMessage.Reconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMessage_Reconnect* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerMessage_Reconnect>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:params.ServerMessage.Reconnect)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:params.ServerMessage.Reconnect)
    MergeFrom(*source);
  }
}

void ServerMessage_Reconnect::MergeFrom(const ServerMessage_Reconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:params.ServerMessage.Reconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seconds() != 0) {
    _internal_set_seconds(from._internal_seconds());
  }
}

void ServerMessage_Reconnect::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:params.ServerMessage.Reconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage_Reconnect::CopyFrom(const ServerMessage_Reconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:params.ServerMessage.Reconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage_Reconnect::IsInitialized() const {
  return true;
}

void ServerMessage_Reconnect::InternalSwap(ServerMessage_Reconnect* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(seconds_, other->seconds_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerMessage_Reconnect::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ServerMessage_GetParameters::_Internal {
 public:
};

ServerMessage_GetParameters::ServerMessage_GetParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:params.ServerMessage.GetParameters)
}
ServerMessage_GetParameters::ServerMessage_GetParameters(const ServerMessage_GetParameters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:params.ServerMessage.GetParameters)
}

void ServerMessage_GetParameters::SharedCtor() {
}

ServerMessage_GetParameters::~ServerMessage_GetParameters() {
  // @@protoc_insertion_point(destructor:params.ServerMessage.GetParameters)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerMessage_GetParameters::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ServerMessage_GetParameters::ArenaDtor(void* object) {
  ServerMessage_GetParameters* _this = reinterpret_cast< ServerMessage_GetParameters* >(object);
  (void)_this;
}
void ServerMessage_GetParameters::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerMessage_GetParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ServerMessage_GetParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:params.ServerMessage.GetParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerMessage_GetParameters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerMessage_GetParameters::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:params.ServerMessage.GetParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:params.ServerMessage.GetParameters)
  return target;
}

size_t ServerMessage_GetParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:params.ServerMessage.GetParameters)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerMessage_GetParameters::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:params.ServerMessage.GetParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMessage_GetParameters* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerMessage_GetParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:params.ServerMessage.GetParameters)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:params.ServerMessage.GetParameters)
    MergeFrom(*source);
  }
}

void ServerMessage_GetParameters::MergeFrom(const ServerMessage_GetParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:params.ServerMessage.GetParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ServerMessage_GetParameters::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:params.ServerMessage.GetParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage_GetParameters::CopyFrom(const ServerMessage_GetParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:params.ServerMessage.GetParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage_GetParameters::IsInitialized() const {
  return true;
}

void ServerMessage_GetParameters::InternalSwap(ServerMessage_GetParameters* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerMessage_GetParameters::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ServerMessage_FitIns_ConfigEntry_DoNotUse::ServerMessage_FitIns_ConfigEntry_DoNotUse() {}
ServerMessage_FitIns_ConfigEntry_DoNotUse::ServerMessage_FitIns_ConfigEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ServerMessage_FitIns_ConfigEntry_DoNotUse::MergeFrom(const ServerMessage_FitIns_ConfigEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ServerMessage_FitIns_ConfigEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ServerMessage_FitIns_ConfigEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class ServerMessage_FitIns::_Internal {
 public:
  static const ::params::Parameters& parameters(const ServerMessage_FitIns* msg);
};

const ::params::Parameters&
ServerMessage_FitIns::_Internal::parameters(const ServerMessage_FitIns* msg) {
  return *msg->parameters_;
}
ServerMessage_FitIns::ServerMessage_FitIns(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  config_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:params.ServerMessage.FitIns)
}
ServerMessage_FitIns::ServerMessage_FitIns(const ServerMessage_FitIns& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  config_.MergeFrom(from.config_);
  if (from._internal_has_parameters()) {
    parameters_ = new ::params::Parameters(*from.parameters_);
  } else {
    parameters_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:params.ServerMessage.FitIns)
}

void ServerMessage_FitIns::SharedCtor() {
parameters_ = nullptr;
}

ServerMessage_FitIns::~ServerMessage_FitIns() {
  // @@protoc_insertion_point(destructor:params.ServerMessage.FitIns)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerMessage_FitIns::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete parameters_;
}

void ServerMessage_FitIns::ArenaDtor(void* object) {
  ServerMessage_FitIns* _this = reinterpret_cast< ServerMessage_FitIns* >(object);
  (void)_this;
}
void ServerMessage_FitIns::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerMessage_FitIns::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ServerMessage_FitIns::Clear() {
// @@protoc_insertion_point(message_clear_start:params.ServerMessage.FitIns)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_.Clear();
  if (GetArena() == nullptr && parameters_ != nullptr) {
    delete parameters_;
  }
  parameters_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerMessage_FitIns::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .params.Parameters parameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_parameters(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .params.Scalar> config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&config_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerMessage_FitIns::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:params.ServerMessage.FitIns)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .params.Parameters parameters = 1;
  if (this->has_parameters()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::parameters(this), target, stream);
  }

  // map<string, .params.Scalar> config = 2;
  if (!this->_internal_config().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "params.ServerMessage.FitIns.ConfigEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_config().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_config().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
          it = this->_internal_config().begin();
          it != this->_internal_config().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ServerMessage_FitIns_ConfigEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
          it = this->_internal_config().begin();
          it != this->_internal_config().end(); ++it) {
        target = ServerMessage_FitIns_ConfigEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:params.ServerMessage.FitIns)
  return target;
}

size_t ServerMessage_FitIns::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:params.ServerMessage.FitIns)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .params.Scalar> config = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_config_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
      it = this->_internal_config().begin();
      it != this->_internal_config().end(); ++it) {
    total_size += ServerMessage_FitIns_ConfigEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .params.Parameters parameters = 1;
  if (this->has_parameters()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *parameters_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerMessage_FitIns::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:params.ServerMessage.FitIns)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMessage_FitIns* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerMessage_FitIns>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:params.ServerMessage.FitIns)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:params.ServerMessage.FitIns)
    MergeFrom(*source);
  }
}

void ServerMessage_FitIns::MergeFrom(const ServerMessage_FitIns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:params.ServerMessage.FitIns)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  config_.MergeFrom(from.config_);
  if (from.has_parameters()) {
    _internal_mutable_parameters()->::params::Parameters::MergeFrom(from._internal_parameters());
  }
}

void ServerMessage_FitIns::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:params.ServerMessage.FitIns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage_FitIns::CopyFrom(const ServerMessage_FitIns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:params.ServerMessage.FitIns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage_FitIns::IsInitialized() const {
  return true;
}

void ServerMessage_FitIns::InternalSwap(ServerMessage_FitIns* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  config_.Swap(&other->config_);
  swap(parameters_, other->parameters_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerMessage_FitIns::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ServerMessage_EvaluateIns_ConfigEntry_DoNotUse::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse() {}
ServerMessage_EvaluateIns_ConfigEntry_DoNotUse::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ServerMessage_EvaluateIns_ConfigEntry_DoNotUse::MergeFrom(const ServerMessage_EvaluateIns_ConfigEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ServerMessage_EvaluateIns_ConfigEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ServerMessage_EvaluateIns_ConfigEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class ServerMessage_EvaluateIns::_Internal {
 public:
  static const ::params::Parameters& parameters(const ServerMessage_EvaluateIns* msg);
};

const ::params::Parameters&
ServerMessage_EvaluateIns::_Internal::parameters(const ServerMessage_EvaluateIns* msg) {
  return *msg->parameters_;
}
ServerMessage_EvaluateIns::ServerMessage_EvaluateIns(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  config_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:params.ServerMessage.EvaluateIns)
}
ServerMessage_EvaluateIns::ServerMessage_EvaluateIns(const ServerMessage_EvaluateIns& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  config_.MergeFrom(from.config_);
  if (from._internal_has_parameters()) {
    parameters_ = new ::params::Parameters(*from.parameters_);
  } else {
    parameters_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:params.ServerMessage.EvaluateIns)
}

void ServerMessage_EvaluateIns::SharedCtor() {
parameters_ = nullptr;
}

ServerMessage_EvaluateIns::~ServerMessage_EvaluateIns() {
  // @@protoc_insertion_point(destructor:params.ServerMessage.EvaluateIns)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerMessage_EvaluateIns::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete parameters_;
}

void ServerMessage_EvaluateIns::ArenaDtor(void* object) {
  ServerMessage_EvaluateIns* _this = reinterpret_cast< ServerMessage_EvaluateIns* >(object);
  (void)_this;
}
void ServerMessage_EvaluateIns::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerMessage_EvaluateIns::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ServerMessage_EvaluateIns::Clear() {
// @@protoc_insertion_point(message_clear_start:params.ServerMessage.EvaluateIns)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_.Clear();
  if (GetArena() == nullptr && parameters_ != nullptr) {
    delete parameters_;
  }
  parameters_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerMessage_EvaluateIns::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .params.Parameters parameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_parameters(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .params.Scalar> config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&config_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerMessage_EvaluateIns::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:params.ServerMessage.EvaluateIns)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .params.Parameters parameters = 1;
  if (this->has_parameters()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::parameters(this), target, stream);
  }

  // map<string, .params.Scalar> config = 2;
  if (!this->_internal_config().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "params.ServerMessage.EvaluateIns.ConfigEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_config().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_config().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
          it = this->_internal_config().begin();
          it != this->_internal_config().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ServerMessage_EvaluateIns_ConfigEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
          it = this->_internal_config().begin();
          it != this->_internal_config().end(); ++it) {
        target = ServerMessage_EvaluateIns_ConfigEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:params.ServerMessage.EvaluateIns)
  return target;
}

size_t ServerMessage_EvaluateIns::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:params.ServerMessage.EvaluateIns)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .params.Scalar> config = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_config_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
      it = this->_internal_config().begin();
      it != this->_internal_config().end(); ++it) {
    total_size += ServerMessage_EvaluateIns_ConfigEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .params.Parameters parameters = 1;
  if (this->has_parameters()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *parameters_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerMessage_EvaluateIns::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:params.ServerMessage.EvaluateIns)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMessage_EvaluateIns* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerMessage_EvaluateIns>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:params.ServerMessage.EvaluateIns)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:params.ServerMessage.EvaluateIns)
    MergeFrom(*source);
  }
}

void ServerMessage_EvaluateIns::MergeFrom(const ServerMessage_EvaluateIns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:params.ServerMessage.EvaluateIns)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  config_.MergeFrom(from.config_);
  if (from.has_parameters()) {
    _internal_mutable_parameters()->::params::Parameters::MergeFrom(from._internal_parameters());
  }
}

void ServerMessage_EvaluateIns::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:params.ServerMessage.EvaluateIns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage_EvaluateIns::CopyFrom(const ServerMessage_EvaluateIns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:params.ServerMessage.EvaluateIns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage_EvaluateIns::IsInitialized() const {
  return true;
}

void ServerMessage_EvaluateIns::InternalSwap(ServerMessage_EvaluateIns* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  config_.Swap(&other->config_);
  swap(parameters_, other->parameters_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerMessage_EvaluateIns::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ServerMessage_PropertiesIns_ConfigEntry_DoNotUse::ServerMessage_PropertiesIns_ConfigEntry_DoNotUse() {}
ServerMessage_PropertiesIns_ConfigEntry_DoNotUse::ServerMessage_PropertiesIns_ConfigEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ServerMessage_PropertiesIns_ConfigEntry_DoNotUse::MergeFrom(const ServerMessage_PropertiesIns_ConfigEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ServerMessage_PropertiesIns_ConfigEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ServerMessage_PropertiesIns_ConfigEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class ServerMessage_PropertiesIns::_Internal {
 public:
};

ServerMessage_PropertiesIns::ServerMessage_PropertiesIns(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  config_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:params.ServerMessage.PropertiesIns)
}
ServerMessage_PropertiesIns::ServerMessage_PropertiesIns(const ServerMessage_PropertiesIns& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  config_.MergeFrom(from.config_);
  // @@protoc_insertion_point(copy_constructor:params.ServerMessage.PropertiesIns)
}

void ServerMessage_PropertiesIns::SharedCtor() {
}

ServerMessage_PropertiesIns::~ServerMessage_PropertiesIns() {
  // @@protoc_insertion_point(destructor:params.ServerMessage.PropertiesIns)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerMessage_PropertiesIns::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ServerMessage_PropertiesIns::ArenaDtor(void* object) {
  ServerMessage_PropertiesIns* _this = reinterpret_cast< ServerMessage_PropertiesIns* >(object);
  (void)_this;
}
void ServerMessage_PropertiesIns::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerMessage_PropertiesIns::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ServerMessage_PropertiesIns::Clear() {
// @@protoc_insertion_point(message_clear_start:params.ServerMessage.PropertiesIns)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerMessage_PropertiesIns::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .params.Scalar> config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&config_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerMessage_PropertiesIns::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:params.ServerMessage.PropertiesIns)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .params.Scalar> config = 1;
  if (!this->_internal_config().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "params.ServerMessage.PropertiesIns.ConfigEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_config().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_config().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
          it = this->_internal_config().begin();
          it != this->_internal_config().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ServerMessage_PropertiesIns_ConfigEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
          it = this->_internal_config().begin();
          it != this->_internal_config().end(); ++it) {
        target = ServerMessage_PropertiesIns_ConfigEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:params.ServerMessage.PropertiesIns)
  return target;
}

size_t ServerMessage_PropertiesIns::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:params.ServerMessage.PropertiesIns)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .params.Scalar> config = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_config_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
      it = this->_internal_config().begin();
      it != this->_internal_config().end(); ++it) {
    total_size += ServerMessage_PropertiesIns_ConfigEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerMessage_PropertiesIns::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:params.ServerMessage.PropertiesIns)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMessage_PropertiesIns* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerMessage_PropertiesIns>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:params.ServerMessage.PropertiesIns)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:params.ServerMessage.PropertiesIns)
    MergeFrom(*source);
  }
}

void ServerMessage_PropertiesIns::MergeFrom(const ServerMessage_PropertiesIns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:params.ServerMessage.PropertiesIns)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  config_.MergeFrom(from.config_);
}

void ServerMessage_PropertiesIns::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:params.ServerMessage.PropertiesIns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage_PropertiesIns::CopyFrom(const ServerMessage_PropertiesIns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:params.ServerMessage.PropertiesIns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage_PropertiesIns::IsInitialized() const {
  return true;
}

void ServerMessage_PropertiesIns::InternalSwap(ServerMessage_PropertiesIns* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  config_.Swap(&other->config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerMessage_PropertiesIns::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ServerMessage::_Internal {
 public:
  static const ::params::ServerMessage_Reconnect& reconnect(const ServerMessage* msg);
  static const ::params::ServerMessage_GetParameters& get_parameters(const ServerMessage* msg);
  static const ::params::ServerMessage_FitIns& fit_ins(const ServerMessage* msg);
  static const ::params::ServerMessage_EvaluateIns& evaluate_ins(const ServerMessage* msg);
  static const ::params::ServerMessage_PropertiesIns& properties_ons(const ServerMessage* msg);
};

const ::params::ServerMessage_Reconnect&
ServerMessage::_Internal::reconnect(const ServerMessage* msg) {
  return *msg->msg_.reconnect_;
}
const ::params::ServerMessage_GetParameters&
ServerMessage::_Internal::get_parameters(const ServerMessage* msg) {
  return *msg->msg_.get_parameters_;
}
const ::params::ServerMessage_FitIns&
ServerMessage::_Internal::fit_ins(const ServerMessage* msg) {
  return *msg->msg_.fit_ins_;
}
const ::params::ServerMessage_EvaluateIns&
ServerMessage::_Internal::evaluate_ins(const ServerMessage* msg) {
  return *msg->msg_.evaluate_ins_;
}
const ::params::ServerMessage_PropertiesIns&
ServerMessage::_Internal::properties_ons(const ServerMessage* msg) {
  return *msg->msg_.properties_ons_;
}
void ServerMessage::set_allocated_reconnect(::params::ServerMessage_Reconnect* reconnect) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_msg();
  if (reconnect) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(reconnect);
    if (message_arena != submessage_arena) {
      reconnect = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reconnect, submessage_arena);
    }
    set_has_reconnect();
    msg_.reconnect_ = reconnect;
  }
  // @@protoc_insertion_point(field_set_allocated:params.ServerMessage.reconnect)
}
void ServerMessage::set_allocated_get_parameters(::params::ServerMessage_GetParameters* get_parameters) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_msg();
  if (get_parameters) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get_parameters);
    if (message_arena != submessage_arena) {
      get_parameters = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_parameters, submessage_arena);
    }
    set_has_get_parameters();
    msg_.get_parameters_ = get_parameters;
  }
  // @@protoc_insertion_point(field_set_allocated:params.ServerMessage.get_parameters)
}
void ServerMessage::set_allocated_fit_ins(::params::ServerMessage_FitIns* fit_ins) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_msg();
  if (fit_ins) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(fit_ins);
    if (message_arena != submessage_arena) {
      fit_ins = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fit_ins, submessage_arena);
    }
    set_has_fit_ins();
    msg_.fit_ins_ = fit_ins;
  }
  // @@protoc_insertion_point(field_set_allocated:params.ServerMessage.fit_ins)
}
void ServerMessage::set_allocated_evaluate_ins(::params::ServerMessage_EvaluateIns* evaluate_ins) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_msg();
  if (evaluate_ins) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(evaluate_ins);
    if (message_arena != submessage_arena) {
      evaluate_ins = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, evaluate_ins, submessage_arena);
    }
    set_has_evaluate_ins();
    msg_.evaluate_ins_ = evaluate_ins;
  }
  // @@protoc_insertion_point(field_set_allocated:params.ServerMessage.evaluate_ins)
}
void ServerMessage::set_allocated_properties_ons(::params::ServerMessage_PropertiesIns* properties_ons) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_msg();
  if (properties_ons) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(properties_ons);
    if (message_arena != submessage_arena) {
      properties_ons = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, properties_ons, submessage_arena);
    }
    set_has_properties_ons();
    msg_.properties_ons_ = properties_ons;
  }
  // @@protoc_insertion_point(field_set_allocated:params.ServerMessage.properties_ons)
}
ServerMessage::ServerMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:params.ServerMessage)
}
ServerMessage::ServerMessage(const ServerMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_msg();
  switch (from.msg_case()) {
    case kReconnect: {
      _internal_mutable_reconnect()->::params::ServerMessage_Reconnect::MergeFrom(from._internal_reconnect());
      break;
    }
    case kGetParameters: {
      _internal_mutable_get_parameters()->::params::ServerMessage_GetParameters::MergeFrom(from._internal_get_parameters());
      break;
    }
    case kFitIns: {
      _internal_mutable_fit_ins()->::params::ServerMessage_FitIns::MergeFrom(from._internal_fit_ins());
      break;
    }
    case kEvaluateIns: {
      _internal_mutable_evaluate_ins()->::params::ServerMessage_EvaluateIns::MergeFrom(from._internal_evaluate_ins());
      break;
    }
    case kPropertiesOns: {
      _internal_mutable_properties_ons()->::params::ServerMessage_PropertiesIns::MergeFrom(from._internal_properties_ons());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:params.ServerMessage)
}

void ServerMessage::SharedCtor() {
clear_has_msg();
}

ServerMessage::~ServerMessage() {
  // @@protoc_insertion_point(destructor:params.ServerMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_msg()) {
    clear_msg();
  }
}

void ServerMessage::ArenaDtor(void* object) {
  ServerMessage* _this = reinterpret_cast< ServerMessage* >(object);
  (void)_this;
}
void ServerMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ServerMessage::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:params.ServerMessage)
  switch (msg_case()) {
    case kReconnect: {
      if (GetArena() == nullptr) {
        delete msg_.reconnect_;
      }
      break;
    }
    case kGetParameters: {
      if (GetArena() == nullptr) {
        delete msg_.get_parameters_;
      }
      break;
    }
    case kFitIns: {
      if (GetArena() == nullptr) {
        delete msg_.fit_ins_;
      }
      break;
    }
    case kEvaluateIns: {
      if (GetArena() == nullptr) {
        delete msg_.evaluate_ins_;
      }
      break;
    }
    case kPropertiesOns: {
      if (GetArena() == nullptr) {
        delete msg_.properties_ons_;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void ServerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:params.ServerMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .params.ServerMessage.Reconnect reconnect = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_reconnect(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .params.ServerMessage.GetParameters get_parameters = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_parameters(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .params.ServerMessage.FitIns fit_ins = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_fit_ins(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .params.ServerMessage.EvaluateIns evaluate_ins = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_evaluate_ins(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .params.ServerMessage.PropertiesIns properties_ons = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_properties_ons(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:params.ServerMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .params.ServerMessage.Reconnect reconnect = 1;
  if (_internal_has_reconnect()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::reconnect(this), target, stream);
  }

  // .params.ServerMessage.GetParameters get_parameters = 2;
  if (_internal_has_get_parameters()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::get_parameters(this), target, stream);
  }

  // .params.ServerMessage.FitIns fit_ins = 3;
  if (_internal_has_fit_ins()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::fit_ins(this), target, stream);
  }

  // .params.ServerMessage.EvaluateIns evaluate_ins = 4;
  if (_internal_has_evaluate_ins()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::evaluate_ins(this), target, stream);
  }

  // .params.ServerMessage.PropertiesIns properties_ons = 5;
  if (_internal_has_properties_ons()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::properties_ons(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:params.ServerMessage)
  return target;
}

size_t ServerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:params.ServerMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (msg_case()) {
    // .params.ServerMessage.Reconnect reconnect = 1;
    case kReconnect: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *msg_.reconnect_);
      break;
    }
    // .params.ServerMessage.GetParameters get_parameters = 2;
    case kGetParameters: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *msg_.get_parameters_);
      break;
    }
    // .params.ServerMessage.FitIns fit_ins = 3;
    case kFitIns: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *msg_.fit_ins_);
      break;
    }
    // .params.ServerMessage.EvaluateIns evaluate_ins = 4;
    case kEvaluateIns: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *msg_.evaluate_ins_);
      break;
    }
    // .params.ServerMessage.PropertiesIns properties_ons = 5;
    case kPropertiesOns: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *msg_.properties_ons_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:params.ServerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:params.ServerMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:params.ServerMessage)
    MergeFrom(*source);
  }
}

void ServerMessage::MergeFrom(const ServerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:params.ServerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.msg_case()) {
    case kReconnect: {
      _internal_mutable_reconnect()->::params::ServerMessage_Reconnect::MergeFrom(from._internal_reconnect());
      break;
    }
    case kGetParameters: {
      _internal_mutable_get_parameters()->::params::ServerMessage_GetParameters::MergeFrom(from._internal_get_parameters());
      break;
    }
    case kFitIns: {
      _internal_mutable_fit_ins()->::params::ServerMessage_FitIns::MergeFrom(from._internal_fit_ins());
      break;
    }
    case kEvaluateIns: {
      _internal_mutable_evaluate_ins()->::params::ServerMessage_EvaluateIns::MergeFrom(from._internal_evaluate_ins());
      break;
    }
    case kPropertiesOns: {
      _internal_mutable_properties_ons()->::params::ServerMessage_PropertiesIns::MergeFrom(from._internal_properties_ons());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void ServerMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:params.ServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage::CopyFrom(const ServerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:params.ServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage::IsInitialized() const {
  return true;
}

void ServerMessage::InternalSwap(ServerMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ClientMessage_Disconnect::_Internal {
 public:
};

ClientMessage_Disconnect::ClientMessage_Disconnect(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:params.ClientMessage.Disconnect)
}
ClientMessage_Disconnect::ClientMessage_Disconnect(const ClientMessage_Disconnect& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:params.ClientMessage.Disconnect)
}

void ClientMessage_Disconnect::SharedCtor() {
reason_ = 0;
}

ClientMessage_Disconnect::~ClientMessage_Disconnect() {
  // @@protoc_insertion_point(destructor:params.ClientMessage.Disconnect)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClientMessage_Disconnect::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClientMessage_Disconnect::ArenaDtor(void* object) {
  ClientMessage_Disconnect* _this = reinterpret_cast< ClientMessage_Disconnect* >(object);
  (void)_this;
}
void ClientMessage_Disconnect::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClientMessage_Disconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClientMessage_Disconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:params.ClientMessage.Disconnect)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientMessage_Disconnect::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .params.Reason reason = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_reason(static_cast<::params::Reason>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientMessage_Disconnect::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:params.ClientMessage.Disconnect)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .params.Reason reason = 1;
  if (this->reason() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:params.ClientMessage.Disconnect)
  return target;
}

size_t ClientMessage_Disconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:params.ClientMessage.Disconnect)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .params.Reason reason = 1;
  if (this->reason() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_reason());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientMessage_Disconnect::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:params.ClientMessage.Disconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientMessage_Disconnect* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientMessage_Disconnect>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:params.ClientMessage.Disconnect)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:params.ClientMessage.Disconnect)
    MergeFrom(*source);
  }
}

void ClientMessage_Disconnect::MergeFrom(const ClientMessage_Disconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:params.ClientMessage.Disconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason() != 0) {
    _internal_set_reason(from._internal_reason());
  }
}

void ClientMessage_Disconnect::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:params.ClientMessage.Disconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMessage_Disconnect::CopyFrom(const ClientMessage_Disconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:params.ClientMessage.Disconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMessage_Disconnect::IsInitialized() const {
  return true;
}

void ClientMessage_Disconnect::InternalSwap(ClientMessage_Disconnect* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(reason_, other->reason_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientMessage_Disconnect::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ClientMessage_ParametersRes::_Internal {
 public:
  static const ::params::Parameters& parameters(const ClientMessage_ParametersRes* msg);
};

const ::params::Parameters&
ClientMessage_ParametersRes::_Internal::parameters(const ClientMessage_ParametersRes* msg) {
  return *msg->parameters_;
}
ClientMessage_ParametersRes::ClientMessage_ParametersRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:params.ClientMessage.ParametersRes)
}
ClientMessage_ParametersRes::ClientMessage_ParametersRes(const ClientMessage_ParametersRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_parameters()) {
    parameters_ = new ::params::Parameters(*from.parameters_);
  } else {
    parameters_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:params.ClientMessage.ParametersRes)
}

void ClientMessage_ParametersRes::SharedCtor() {
parameters_ = nullptr;
}

ClientMessage_ParametersRes::~ClientMessage_ParametersRes() {
  // @@protoc_insertion_point(destructor:params.ClientMessage.ParametersRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClientMessage_ParametersRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete parameters_;
}

void ClientMessage_ParametersRes::ArenaDtor(void* object) {
  ClientMessage_ParametersRes* _this = reinterpret_cast< ClientMessage_ParametersRes* >(object);
  (void)_this;
}
void ClientMessage_ParametersRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClientMessage_ParametersRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClientMessage_ParametersRes::Clear() {
// @@protoc_insertion_point(message_clear_start:params.ClientMessage.ParametersRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && parameters_ != nullptr) {
    delete parameters_;
  }
  parameters_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientMessage_ParametersRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .params.Parameters parameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_parameters(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientMessage_ParametersRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:params.ClientMessage.ParametersRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .params.Parameters parameters = 1;
  if (this->has_parameters()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::parameters(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:params.ClientMessage.ParametersRes)
  return target;
}

size_t ClientMessage_ParametersRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:params.ClientMessage.ParametersRes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .params.Parameters parameters = 1;
  if (this->has_parameters()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *parameters_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientMessage_ParametersRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:params.ClientMessage.ParametersRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientMessage_ParametersRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientMessage_ParametersRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:params.ClientMessage.ParametersRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:params.ClientMessage.ParametersRes)
    MergeFrom(*source);
  }
}

void ClientMessage_ParametersRes::MergeFrom(const ClientMessage_ParametersRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:params.ClientMessage.ParametersRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_parameters()) {
    _internal_mutable_parameters()->::params::Parameters::MergeFrom(from._internal_parameters());
  }
}

void ClientMessage_ParametersRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:params.ClientMessage.ParametersRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMessage_ParametersRes::CopyFrom(const ClientMessage_ParametersRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:params.ClientMessage.ParametersRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMessage_ParametersRes::IsInitialized() const {
  return true;
}

void ClientMessage_ParametersRes::InternalSwap(ClientMessage_ParametersRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(parameters_, other->parameters_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientMessage_ParametersRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ClientMessage_FitRes_MetricsEntry_DoNotUse::ClientMessage_FitRes_MetricsEntry_DoNotUse() {}
ClientMessage_FitRes_MetricsEntry_DoNotUse::ClientMessage_FitRes_MetricsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ClientMessage_FitRes_MetricsEntry_DoNotUse::MergeFrom(const ClientMessage_FitRes_MetricsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ClientMessage_FitRes_MetricsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ClientMessage_FitRes_MetricsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class ClientMessage_FitRes::_Internal {
 public:
  static const ::params::Parameters& parameters(const ClientMessage_FitRes* msg);
};

const ::params::Parameters&
ClientMessage_FitRes::_Internal::parameters(const ClientMessage_FitRes* msg) {
  return *msg->parameters_;
}
ClientMessage_FitRes::ClientMessage_FitRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metrics_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:params.ClientMessage.FitRes)
}
ClientMessage_FitRes::ClientMessage_FitRes(const ClientMessage_FitRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metrics_.MergeFrom(from.metrics_);
  if (from._internal_has_parameters()) {
    parameters_ = new ::params::Parameters(*from.parameters_);
  } else {
    parameters_ = nullptr;
  }
  num_examples_ = from.num_examples_;
  // @@protoc_insertion_point(copy_constructor:params.ClientMessage.FitRes)
}

void ClientMessage_FitRes::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&parameters_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&num_examples_) -
    reinterpret_cast<char*>(&parameters_)) + sizeof(num_examples_));
}

ClientMessage_FitRes::~ClientMessage_FitRes() {
  // @@protoc_insertion_point(destructor:params.ClientMessage.FitRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClientMessage_FitRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete parameters_;
}

void ClientMessage_FitRes::ArenaDtor(void* object) {
  ClientMessage_FitRes* _this = reinterpret_cast< ClientMessage_FitRes* >(object);
  (void)_this;
}
void ClientMessage_FitRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClientMessage_FitRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClientMessage_FitRes::Clear() {
// @@protoc_insertion_point(message_clear_start:params.ClientMessage.FitRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metrics_.Clear();
  if (GetArena() == nullptr && parameters_ != nullptr) {
    delete parameters_;
  }
  parameters_ = nullptr;
  num_examples_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientMessage_FitRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .params.Parameters parameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_parameters(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 num_examples = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          num_examples_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .params.Scalar> metrics = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metrics_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientMessage_FitRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:params.ClientMessage.FitRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .params.Parameters parameters = 1;
  if (this->has_parameters()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::parameters(this), target, stream);
  }

  // int64 num_examples = 2;
  if (this->num_examples() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_num_examples(), target);
  }

  // map<string, .params.Scalar> metrics = 5;
  if (!this->_internal_metrics().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "params.ClientMessage.FitRes.MetricsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metrics().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metrics().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
          it = this->_internal_metrics().begin();
          it != this->_internal_metrics().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ClientMessage_FitRes_MetricsEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
          it = this->_internal_metrics().begin();
          it != this->_internal_metrics().end(); ++it) {
        target = ClientMessage_FitRes_MetricsEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:params.ClientMessage.FitRes)
  return target;
}

size_t ClientMessage_FitRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:params.ClientMessage.FitRes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .params.Scalar> metrics = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metrics_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
      it = this->_internal_metrics().begin();
      it != this->_internal_metrics().end(); ++it) {
    total_size += ClientMessage_FitRes_MetricsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .params.Parameters parameters = 1;
  if (this->has_parameters()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *parameters_);
  }

  // int64 num_examples = 2;
  if (this->num_examples() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_num_examples());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientMessage_FitRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:params.ClientMessage.FitRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientMessage_FitRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientMessage_FitRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:params.ClientMessage.FitRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:params.ClientMessage.FitRes)
    MergeFrom(*source);
  }
}

void ClientMessage_FitRes::MergeFrom(const ClientMessage_FitRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:params.ClientMessage.FitRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metrics_.MergeFrom(from.metrics_);
  if (from.has_parameters()) {
    _internal_mutable_parameters()->::params::Parameters::MergeFrom(from._internal_parameters());
  }
  if (from.num_examples() != 0) {
    _internal_set_num_examples(from._internal_num_examples());
  }
}

void ClientMessage_FitRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:params.ClientMessage.FitRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMessage_FitRes::CopyFrom(const ClientMessage_FitRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:params.ClientMessage.FitRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMessage_FitRes::IsInitialized() const {
  return true;
}

void ClientMessage_FitRes::InternalSwap(ClientMessage_FitRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metrics_.Swap(&other->metrics_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClientMessage_FitRes, num_examples_)
      + sizeof(ClientMessage_FitRes::num_examples_)
      - PROTOBUF_FIELD_OFFSET(ClientMessage_FitRes, parameters_)>(
          reinterpret_cast<char*>(&parameters_),
          reinterpret_cast<char*>(&other->parameters_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientMessage_FitRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ClientMessage_EvaluateRes_MetricsEntry_DoNotUse::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse() {}
ClientMessage_EvaluateRes_MetricsEntry_DoNotUse::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ClientMessage_EvaluateRes_MetricsEntry_DoNotUse::MergeFrom(const ClientMessage_EvaluateRes_MetricsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ClientMessage_EvaluateRes_MetricsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ClientMessage_EvaluateRes_MetricsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class ClientMessage_EvaluateRes::_Internal {
 public:
};

ClientMessage_EvaluateRes::ClientMessage_EvaluateRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metrics_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:params.ClientMessage.EvaluateRes)
}
ClientMessage_EvaluateRes::ClientMessage_EvaluateRes(const ClientMessage_EvaluateRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metrics_.MergeFrom(from.metrics_);
  ::memcpy(&num_examples_, &from.num_examples_,
    static_cast<size_t>(reinterpret_cast<char*>(&loss_) -
    reinterpret_cast<char*>(&num_examples_)) + sizeof(loss_));
  // @@protoc_insertion_point(copy_constructor:params.ClientMessage.EvaluateRes)
}

void ClientMessage_EvaluateRes::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&num_examples_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&loss_) -
    reinterpret_cast<char*>(&num_examples_)) + sizeof(loss_));
}

ClientMessage_EvaluateRes::~ClientMessage_EvaluateRes() {
  // @@protoc_insertion_point(destructor:params.ClientMessage.EvaluateRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClientMessage_EvaluateRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClientMessage_EvaluateRes::ArenaDtor(void* object) {
  ClientMessage_EvaluateRes* _this = reinterpret_cast< ClientMessage_EvaluateRes* >(object);
  (void)_this;
}
void ClientMessage_EvaluateRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClientMessage_EvaluateRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClientMessage_EvaluateRes::Clear() {
// @@protoc_insertion_point(message_clear_start:params.ClientMessage.EvaluateRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metrics_.Clear();
  ::memset(&num_examples_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loss_) -
      reinterpret_cast<char*>(&num_examples_)) + sizeof(loss_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientMessage_EvaluateRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 num_examples = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          num_examples_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float loss = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          loss_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // map<string, .params.Scalar> metrics = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metrics_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientMessage_EvaluateRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:params.ClientMessage.EvaluateRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 num_examples = 1;
  if (this->num_examples() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_num_examples(), target);
  }

  // float loss = 2;
  if (!(this->loss() <= 0 && this->loss() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_loss(), target);
  }

  // map<string, .params.Scalar> metrics = 4;
  if (!this->_internal_metrics().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "params.ClientMessage.EvaluateRes.MetricsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metrics().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metrics().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
          it = this->_internal_metrics().begin();
          it != this->_internal_metrics().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ClientMessage_EvaluateRes_MetricsEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
          it = this->_internal_metrics().begin();
          it != this->_internal_metrics().end(); ++it) {
        target = ClientMessage_EvaluateRes_MetricsEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:params.ClientMessage.EvaluateRes)
  return target;
}

size_t ClientMessage_EvaluateRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:params.ClientMessage.EvaluateRes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .params.Scalar> metrics = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metrics_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
      it = this->_internal_metrics().begin();
      it != this->_internal_metrics().end(); ++it) {
    total_size += ClientMessage_EvaluateRes_MetricsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // int64 num_examples = 1;
  if (this->num_examples() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_num_examples());
  }

  // float loss = 2;
  if (!(this->loss() <= 0 && this->loss() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientMessage_EvaluateRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:params.ClientMessage.EvaluateRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientMessage_EvaluateRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientMessage_EvaluateRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:params.ClientMessage.EvaluateRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:params.ClientMessage.EvaluateRes)
    MergeFrom(*source);
  }
}

void ClientMessage_EvaluateRes::MergeFrom(const ClientMessage_EvaluateRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:params.ClientMessage.EvaluateRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metrics_.MergeFrom(from.metrics_);
  if (from.num_examples() != 0) {
    _internal_set_num_examples(from._internal_num_examples());
  }
  if (!(from.loss() <= 0 && from.loss() >= 0)) {
    _internal_set_loss(from._internal_loss());
  }
}

void ClientMessage_EvaluateRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:params.ClientMessage.EvaluateRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMessage_EvaluateRes::CopyFrom(const ClientMessage_EvaluateRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:params.ClientMessage.EvaluateRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMessage_EvaluateRes::IsInitialized() const {
  return true;
}

void ClientMessage_EvaluateRes::InternalSwap(ClientMessage_EvaluateRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metrics_.Swap(&other->metrics_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClientMessage_EvaluateRes, loss_)
      + sizeof(ClientMessage_EvaluateRes::loss_)
      - PROTOBUF_FIELD_OFFSET(ClientMessage_EvaluateRes, num_examples_)>(
          reinterpret_cast<char*>(&num_examples_),
          reinterpret_cast<char*>(&other->num_examples_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientMessage_EvaluateRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse::ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse() {}
ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse::ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse::MergeFrom(const ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class ClientMessage_PropertiesRes::_Internal {
 public:
};

ClientMessage_PropertiesRes::ClientMessage_PropertiesRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  properties_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:params.ClientMessage.PropertiesRes)
}
ClientMessage_PropertiesRes::ClientMessage_PropertiesRes(const ClientMessage_PropertiesRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  properties_.MergeFrom(from.properties_);
  // @@protoc_insertion_point(copy_constructor:params.ClientMessage.PropertiesRes)
}

void ClientMessage_PropertiesRes::SharedCtor() {
}

ClientMessage_PropertiesRes::~ClientMessage_PropertiesRes() {
  // @@protoc_insertion_point(destructor:params.ClientMessage.PropertiesRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClientMessage_PropertiesRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClientMessage_PropertiesRes::ArenaDtor(void* object) {
  ClientMessage_PropertiesRes* _this = reinterpret_cast< ClientMessage_PropertiesRes* >(object);
  (void)_this;
}
void ClientMessage_PropertiesRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClientMessage_PropertiesRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClientMessage_PropertiesRes::Clear() {
// @@protoc_insertion_point(message_clear_start:params.ClientMessage.PropertiesRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientMessage_PropertiesRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .params.Scalar> properties = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&properties_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientMessage_PropertiesRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:params.ClientMessage.PropertiesRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .params.Scalar> properties = 1;
  if (!this->_internal_properties().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "params.ClientMessage.PropertiesRes.PropertiesEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_properties().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_properties().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
          it = this->_internal_properties().begin();
          it != this->_internal_properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
          it = this->_internal_properties().begin();
          it != this->_internal_properties().end(); ++it) {
        target = ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:params.ClientMessage.PropertiesRes)
  return target;
}

size_t ClientMessage_PropertiesRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:params.ClientMessage.PropertiesRes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .params.Scalar> properties = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_properties_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::params::Scalar >::const_iterator
      it = this->_internal_properties().begin();
      it != this->_internal_properties().end(); ++it) {
    total_size += ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientMessage_PropertiesRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:params.ClientMessage.PropertiesRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientMessage_PropertiesRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientMessage_PropertiesRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:params.ClientMessage.PropertiesRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:params.ClientMessage.PropertiesRes)
    MergeFrom(*source);
  }
}

void ClientMessage_PropertiesRes::MergeFrom(const ClientMessage_PropertiesRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:params.ClientMessage.PropertiesRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
}

void ClientMessage_PropertiesRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:params.ClientMessage.PropertiesRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMessage_PropertiesRes::CopyFrom(const ClientMessage_PropertiesRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:params.ClientMessage.PropertiesRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMessage_PropertiesRes::IsInitialized() const {
  return true;
}

void ClientMessage_PropertiesRes::InternalSwap(ClientMessage_PropertiesRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  properties_.Swap(&other->properties_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientMessage_PropertiesRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ClientMessage::_Internal {
 public:
  static const ::params::ClientMessage_Disconnect& disconnect(const ClientMessage* msg);
  static const ::params::ClientMessage_ParametersRes& parameters_res(const ClientMessage* msg);
  static const ::params::ClientMessage_FitRes& fit_res(const ClientMessage* msg);
  static const ::params::ClientMessage_EvaluateRes& evaluate_res(const ClientMessage* msg);
  static const ::params::ClientMessage_PropertiesRes& properties_res(const ClientMessage* msg);
};

const ::params::ClientMessage_Disconnect&
ClientMessage::_Internal::disconnect(const ClientMessage* msg) {
  return *msg->msg_.disconnect_;
}
const ::params::ClientMessage_ParametersRes&
ClientMessage::_Internal::parameters_res(const ClientMessage* msg) {
  return *msg->msg_.parameters_res_;
}
const ::params::ClientMessage_FitRes&
ClientMessage::_Internal::fit_res(const ClientMessage* msg) {
  return *msg->msg_.fit_res_;
}
const ::params::ClientMessage_EvaluateRes&
ClientMessage::_Internal::evaluate_res(const ClientMessage* msg) {
  return *msg->msg_.evaluate_res_;
}
const ::params::ClientMessage_PropertiesRes&
ClientMessage::_Internal::properties_res(const ClientMessage* msg) {
  return *msg->msg_.properties_res_;
}
void ClientMessage::set_allocated_disconnect(::params::ClientMessage_Disconnect* disconnect) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_msg();
  if (disconnect) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(disconnect);
    if (message_arena != submessage_arena) {
      disconnect = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, disconnect, submessage_arena);
    }
    set_has_disconnect();
    msg_.disconnect_ = disconnect;
  }
  // @@protoc_insertion_point(field_set_allocated:params.ClientMessage.disconnect)
}
void ClientMessage::set_allocated_parameters_res(::params::ClientMessage_ParametersRes* parameters_res) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_msg();
  if (parameters_res) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(parameters_res);
    if (message_arena != submessage_arena) {
      parameters_res = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, parameters_res, submessage_arena);
    }
    set_has_parameters_res();
    msg_.parameters_res_ = parameters_res;
  }
  // @@protoc_insertion_point(field_set_allocated:params.ClientMessage.parameters_res)
}
void ClientMessage::set_allocated_fit_res(::params::ClientMessage_FitRes* fit_res) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_msg();
  if (fit_res) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(fit_res);
    if (message_arena != submessage_arena) {
      fit_res = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fit_res, submessage_arena);
    }
    set_has_fit_res();
    msg_.fit_res_ = fit_res;
  }
  // @@protoc_insertion_point(field_set_allocated:params.ClientMessage.fit_res)
}
void ClientMessage::set_allocated_evaluate_res(::params::ClientMessage_EvaluateRes* evaluate_res) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_msg();
  if (evaluate_res) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(evaluate_res);
    if (message_arena != submessage_arena) {
      evaluate_res = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, evaluate_res, submessage_arena);
    }
    set_has_evaluate_res();
    msg_.evaluate_res_ = evaluate_res;
  }
  // @@protoc_insertion_point(field_set_allocated:params.ClientMessage.evaluate_res)
}
void ClientMessage::set_allocated_properties_res(::params::ClientMessage_PropertiesRes* properties_res) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_msg();
  if (properties_res) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(properties_res);
    if (message_arena != submessage_arena) {
      properties_res = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, properties_res, submessage_arena);
    }
    set_has_properties_res();
    msg_.properties_res_ = properties_res;
  }
  // @@protoc_insertion_point(field_set_allocated:params.ClientMessage.properties_res)
}
ClientMessage::ClientMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:params.ClientMessage)
}
ClientMessage::ClientMessage(const ClientMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_msg();
  switch (from.msg_case()) {
    case kDisconnect: {
      _internal_mutable_disconnect()->::params::ClientMessage_Disconnect::MergeFrom(from._internal_disconnect());
      break;
    }
    case kParametersRes: {
      _internal_mutable_parameters_res()->::params::ClientMessage_ParametersRes::MergeFrom(from._internal_parameters_res());
      break;
    }
    case kFitRes: {
      _internal_mutable_fit_res()->::params::ClientMessage_FitRes::MergeFrom(from._internal_fit_res());
      break;
    }
    case kEvaluateRes: {
      _internal_mutable_evaluate_res()->::params::ClientMessage_EvaluateRes::MergeFrom(from._internal_evaluate_res());
      break;
    }
    case kPropertiesRes: {
      _internal_mutable_properties_res()->::params::ClientMessage_PropertiesRes::MergeFrom(from._internal_properties_res());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:params.ClientMessage)
}

void ClientMessage::SharedCtor() {
clear_has_msg();
}

ClientMessage::~ClientMessage() {
  // @@protoc_insertion_point(destructor:params.ClientMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClientMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_msg()) {
    clear_msg();
  }
}

void ClientMessage::ArenaDtor(void* object) {
  ClientMessage* _this = reinterpret_cast< ClientMessage* >(object);
  (void)_this;
}
void ClientMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClientMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClientMessage::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:params.ClientMessage)
  switch (msg_case()) {
    case kDisconnect: {
      if (GetArena() == nullptr) {
        delete msg_.disconnect_;
      }
      break;
    }
    case kParametersRes: {
      if (GetArena() == nullptr) {
        delete msg_.parameters_res_;
      }
      break;
    }
    case kFitRes: {
      if (GetArena() == nullptr) {
        delete msg_.fit_res_;
      }
      break;
    }
    case kEvaluateRes: {
      if (GetArena() == nullptr) {
        delete msg_.evaluate_res_;
      }
      break;
    }
    case kPropertiesRes: {
      if (GetArena() == nullptr) {
        delete msg_.properties_res_;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void ClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:params.ClientMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .params.ClientMessage.Disconnect disconnect = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_disconnect(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .params.ClientMessage.ParametersRes parameters_res = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_parameters_res(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .params.ClientMessage.FitRes fit_res = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_fit_res(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .params.ClientMessage.EvaluateRes evaluate_res = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_evaluate_res(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .params.ClientMessage.PropertiesRes properties_res = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_properties_res(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:params.ClientMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .params.ClientMessage.Disconnect disconnect = 1;
  if (_internal_has_disconnect()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::disconnect(this), target, stream);
  }

  // .params.ClientMessage.ParametersRes parameters_res = 2;
  if (_internal_has_parameters_res()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::parameters_res(this), target, stream);
  }

  // .params.ClientMessage.FitRes fit_res = 3;
  if (_internal_has_fit_res()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::fit_res(this), target, stream);
  }

  // .params.ClientMessage.EvaluateRes evaluate_res = 4;
  if (_internal_has_evaluate_res()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::evaluate_res(this), target, stream);
  }

  // .params.ClientMessage.PropertiesRes properties_res = 5;
  if (_internal_has_properties_res()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::properties_res(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:params.ClientMessage)
  return target;
}

size_t ClientMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:params.ClientMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (msg_case()) {
    // .params.ClientMessage.Disconnect disconnect = 1;
    case kDisconnect: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *msg_.disconnect_);
      break;
    }
    // .params.ClientMessage.ParametersRes parameters_res = 2;
    case kParametersRes: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *msg_.parameters_res_);
      break;
    }
    // .params.ClientMessage.FitRes fit_res = 3;
    case kFitRes: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *msg_.fit_res_);
      break;
    }
    // .params.ClientMessage.EvaluateRes evaluate_res = 4;
    case kEvaluateRes: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *msg_.evaluate_res_);
      break;
    }
    // .params.ClientMessage.PropertiesRes properties_res = 5;
    case kPropertiesRes: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *msg_.properties_res_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:params.ClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:params.ClientMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:params.ClientMessage)
    MergeFrom(*source);
  }
}

void ClientMessage::MergeFrom(const ClientMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:params.ClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.msg_case()) {
    case kDisconnect: {
      _internal_mutable_disconnect()->::params::ClientMessage_Disconnect::MergeFrom(from._internal_disconnect());
      break;
    }
    case kParametersRes: {
      _internal_mutable_parameters_res()->::params::ClientMessage_ParametersRes::MergeFrom(from._internal_parameters_res());
      break;
    }
    case kFitRes: {
      _internal_mutable_fit_res()->::params::ClientMessage_FitRes::MergeFrom(from._internal_fit_res());
      break;
    }
    case kEvaluateRes: {
      _internal_mutable_evaluate_res()->::params::ClientMessage_EvaluateRes::MergeFrom(from._internal_evaluate_res());
      break;
    }
    case kPropertiesRes: {
      _internal_mutable_properties_res()->::params::ClientMessage_PropertiesRes::MergeFrom(from._internal_properties_res());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void ClientMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:params.ClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMessage::CopyFrom(const ClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:params.ClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMessage::IsInitialized() const {
  return true;
}

void ClientMessage::InternalSwap(ClientMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Scalar::_Internal {
 public:
};

Scalar::Scalar(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:params.Scalar)
}
Scalar::Scalar(const Scalar& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_scalar();
  switch (from.scalar_case()) {
    case kDouble: {
      _internal_set_double_(from._internal_double_());
      break;
    }
    case kSint64: {
      _internal_set_sint64(from._internal_sint64());
      break;
    }
    case kBool: {
      _internal_set_bool_(from._internal_bool_());
      break;
    }
    case kString: {
      _internal_set_string(from._internal_string());
      break;
    }
    case kBytes: {
      _internal_set_bytes(from._internal_bytes());
      break;
    }
    case SCALAR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:params.Scalar)
}

void Scalar::SharedCtor() {
clear_has_scalar();
}

Scalar::~Scalar() {
  // @@protoc_insertion_point(destructor:params.Scalar)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Scalar::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_scalar()) {
    clear_scalar();
  }
}

void Scalar::ArenaDtor(void* object) {
  Scalar* _this = reinterpret_cast< Scalar* >(object);
  (void)_this;
}
void Scalar::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Scalar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Scalar::clear_scalar() {
// @@protoc_insertion_point(one_of_clear_start:params.Scalar)
  switch (scalar_case()) {
    case kDouble: {
      // No need to clear
      break;
    }
    case kSint64: {
      // No need to clear
      break;
    }
    case kBool: {
      // No need to clear
      break;
    }
    case kString: {
      scalar_.string_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kBytes: {
      scalar_.bytes_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case SCALAR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SCALAR_NOT_SET;
}


void Scalar::Clear() {
// @@protoc_insertion_point(message_clear_start:params.Scalar)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_scalar();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scalar::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double double = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _internal_set_double_(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // sint64 sint64 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _internal_set_sint64(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool bool = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _internal_set_bool_(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string string = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "params.Scalar.string"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes bytes = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_bytes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Scalar::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:params.Scalar)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double double = 1;
  if (_internal_has_double_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_double_(), target);
  }

  // sint64 sint64 = 2;
  if (_internal_has_sint64()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt64ToArray(2, this->_internal_sint64(), target);
  }

  // bool bool = 3;
  if (_internal_has_bool_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_bool_(), target);
  }

  // string string = 4;
  if (_internal_has_string()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string().data(), static_cast<int>(this->_internal_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "params.Scalar.string");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_string(), target);
  }

  // bytes bytes = 5;
  if (_internal_has_bytes()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_bytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:params.Scalar)
  return target;
}

size_t Scalar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:params.Scalar)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (scalar_case()) {
    // double double = 1;
    case kDouble: {
      total_size += 1 + 8;
      break;
    }
    // sint64 sint64 = 2;
    case kSint64: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt64Size(
          this->_internal_sint64());
      break;
    }
    // bool bool = 3;
    case kBool: {
      total_size += 1 + 1;
      break;
    }
    // string string = 4;
    case kString: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string());
      break;
    }
    // bytes bytes = 5;
    case kBytes: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_bytes());
      break;
    }
    case SCALAR_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Scalar::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:params.Scalar)
  GOOGLE_DCHECK_NE(&from, this);
  const Scalar* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Scalar>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:params.Scalar)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:params.Scalar)
    MergeFrom(*source);
  }
}

void Scalar::MergeFrom(const Scalar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:params.Scalar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.scalar_case()) {
    case kDouble: {
      _internal_set_double_(from._internal_double_());
      break;
    }
    case kSint64: {
      _internal_set_sint64(from._internal_sint64());
      break;
    }
    case kBool: {
      _internal_set_bool_(from._internal_bool_());
      break;
    }
    case kString: {
      _internal_set_string(from._internal_string());
      break;
    }
    case kBytes: {
      _internal_set_bytes(from._internal_bytes());
      break;
    }
    case SCALAR_NOT_SET: {
      break;
    }
  }
}

void Scalar::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:params.Scalar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Scalar::CopyFrom(const Scalar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:params.Scalar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scalar::IsInitialized() const {
  return true;
}

void Scalar::InternalSwap(Scalar* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(scalar_, other->scalar_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Scalar::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace params
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::params::Parameters* Arena::CreateMaybeMessage< ::params::Parameters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::Parameters >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ServerMessage_Reconnect* Arena::CreateMaybeMessage< ::params::ServerMessage_Reconnect >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ServerMessage_Reconnect >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ServerMessage_GetParameters* Arena::CreateMaybeMessage< ::params::ServerMessage_GetParameters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ServerMessage_GetParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ServerMessage_FitIns_ConfigEntry_DoNotUse* Arena::CreateMaybeMessage< ::params::ServerMessage_FitIns_ConfigEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ServerMessage_FitIns_ConfigEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ServerMessage_FitIns* Arena::CreateMaybeMessage< ::params::ServerMessage_FitIns >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ServerMessage_FitIns >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse* Arena::CreateMaybeMessage< ::params::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ServerMessage_EvaluateIns* Arena::CreateMaybeMessage< ::params::ServerMessage_EvaluateIns >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ServerMessage_EvaluateIns >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ServerMessage_PropertiesIns_ConfigEntry_DoNotUse* Arena::CreateMaybeMessage< ::params::ServerMessage_PropertiesIns_ConfigEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ServerMessage_PropertiesIns_ConfigEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ServerMessage_PropertiesIns* Arena::CreateMaybeMessage< ::params::ServerMessage_PropertiesIns >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ServerMessage_PropertiesIns >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ServerMessage* Arena::CreateMaybeMessage< ::params::ServerMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ServerMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ClientMessage_Disconnect* Arena::CreateMaybeMessage< ::params::ClientMessage_Disconnect >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ClientMessage_Disconnect >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ClientMessage_ParametersRes* Arena::CreateMaybeMessage< ::params::ClientMessage_ParametersRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ClientMessage_ParametersRes >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ClientMessage_FitRes_MetricsEntry_DoNotUse* Arena::CreateMaybeMessage< ::params::ClientMessage_FitRes_MetricsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ClientMessage_FitRes_MetricsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ClientMessage_FitRes* Arena::CreateMaybeMessage< ::params::ClientMessage_FitRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ClientMessage_FitRes >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse* Arena::CreateMaybeMessage< ::params::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ClientMessage_EvaluateRes* Arena::CreateMaybeMessage< ::params::ClientMessage_EvaluateRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ClientMessage_EvaluateRes >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse* Arena::CreateMaybeMessage< ::params::ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ClientMessage_PropertiesRes_PropertiesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ClientMessage_PropertiesRes* Arena::CreateMaybeMessage< ::params::ClientMessage_PropertiesRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ClientMessage_PropertiesRes >(arena);
}
template<> PROTOBUF_NOINLINE ::params::ClientMessage* Arena::CreateMaybeMessage< ::params::ClientMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::ClientMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::params::Scalar* Arena::CreateMaybeMessage< ::params::Scalar >(Arena* arena) {
  return Arena::CreateMessageInternal< ::params::Scalar >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
